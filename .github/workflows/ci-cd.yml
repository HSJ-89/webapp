name: CI/CD Docker Build & Deploy

on:
  push:
    branches:
      - main

env:
  REGISTRY: hsj89/webapp

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Set up Java & Maven
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Maven
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      # 3️⃣ Build & Test
      - name: Build with Maven
        run: mvn clean package

      - name: Run tests
        run: mvn test

      # 4️⃣ Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 5️⃣ Log in to Docker Hub
      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 6️⃣ Build Docker Image
      - name: Build Docker Image
        run: |
          IMAGE_TAG=${{ github.run_number }}
          docker build -t ${{ env.REGISTRY }}:$IMAGE_TAG .

      # 7️⃣ List Docker Images
      - name: List Docker Images
        run: docker images

      # 8️⃣ Push Docker Image
      - name: Push Docker Image
        run: |
          IMAGE_TAG=${{ github.run_number }}
          docker push ${{ env.REGISTRY }}:$IMAGE_TAG

      # 9️⃣ (Optional) Deploy container locally
      # Only works on self-hosted runners, not GitHub-hosted
      # - name: Deploy Docker Container
      #   run: |
      #     IMAGE_TAG=${{ github.run_number }}
      #     if [ $(docker ps -q -f name=webapp) ]; then
      #       docker rm -f webapp
      #     fi
      #     docker run -d --name webapp -p 81:8080 ${{ env.REGISTRY }}:$IMAGE_TAG
