name: Deploy to GCP Cloud Run

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      GCP_PROJECT: cobalt-alcove-345208
      GCP_REGION: us-central1
      SERVICE_NAME: webapp-service-dev

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up JDK and Maven caching
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    # Step 3: Build the application
    - name: Build with Maven
      run: mvn clean package

    # Step 4: Authenticate with GCP
    - name: Authenticate with GCP
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    # Step 5: Configure Docker for Artifact Registry
    - name: Configure Docker for GCP Artifact Registry
      run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

    # Step 6: Build and push Docker image
    - name: Build and Push Docker Image
      env:
        IMAGE: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT }}/webapp-repo/webapp:${{ github.run_number }}
      run: |
        docker build -t $IMAGE .
        docker push $IMAGE

    # Step 7: Deploy to Cloud Run
    - name: Deploy to Cloud Run
      env:
        IMAGE: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT }}/webapp-repo/webapp:${{ github.run_number }}
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image $IMAGE \
          --platform managed \
          --allow-unauthenticated \
          --region ${{ env.GCP_REGION }}